{"version":3,"file":"static/js/99.ce678e5a.chunk.js","mappings":"8KAOA,MA+BA,EA/BsBA,IAAwB,IACxCC,EACAC,GAFiB,KAAEC,EAAI,QAAEC,GAASJ,EAItC,OAAQG,GACN,IAAK,QACHF,GAAOI,EAAAA,EAAAA,KAACC,EAAAA,IAAoB,CAACC,UAAU,0BACvCL,EAAa,0BACb,MACF,IAAK,UACHD,GAAOI,EAAAA,EAAAA,KAACG,EAAAA,IAAoB,CAACD,UAAU,4BACvCL,EAAa,8BACb,MACF,IAAK,UACHD,GACEI,EAAAA,EAAAA,KAACI,EAAAA,IAAyB,CAACF,UAAU,wCAEvCL,EAAa,4BACb,MACF,QACED,EAAO,KAGX,OACES,EAAAA,EAAAA,MAAA,OAAKH,UAAS,oCAAAI,OAAsCT,EAAU,cAAaU,SAAA,CACxEX,GACDI,EAAAA,EAAAA,KAAA,QAAME,UAAU,sBAAqBK,SAAER,MACnC,C,qJCxBV,MAAMS,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,KAAaE,SAAS,0BAgHlC,EA7GcE,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAClB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,GAAY,CAAEC,WAAYC,EAAAA,KAErCC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACblB,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBqB,SAAWC,IACTR,EAASS,OAAOD,EAAO,IAa3B,OAVAE,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAOJ,OANIX,EAASY,YACXD,EAAUE,YAAW,KACnBjB,IACAE,EAAS,aAAa,GACrB,MAEE,IAAMgB,aAAaH,EAAQ,GACjC,CAACf,EAAOI,EAAUF,KAEnBpB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,4DAA2DK,UACxEF,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wDAAuDK,SAAA,EACpEP,EAAAA,EAAAA,KAAA,MAAIE,UAAU,oDAAmDK,SAAC,0BAGjEe,EAASe,YACRrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACxC,KAAM,UAAWC,QAAS,eAE1CuB,EAASiB,UACRvC,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CACZxC,KAAM,QACNC,QAAiB,OAARuB,QAAQ,IAARA,GAAe,QAAPR,EAARQ,EAAUkB,aAAK,IAAA1B,GAAU,QAAVC,EAAfD,EAAiB2B,gBAAQ,IAAA1B,GAAM,QAANC,EAAzBD,EAA2B2B,YAAI,IAAA1B,OAAvB,EAARA,EAAiCjB,UAG7CuB,EAASY,YACRlC,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,CAACxC,KAAM,UAAWC,QAAiB,OAARuB,QAAQ,IAARA,GAAc,QAANL,EAARK,EAAUoB,YAAI,IAAAzB,OAAN,EAARA,EAAgBlB,WAG3DM,EAAAA,EAAAA,MAAA,QAAMwB,SAAUH,EAAOiB,aAAczC,UAAU,YAAWK,SAAA,EAExDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEP,EAAAA,EAAAA,KAAA,SACE4C,QAAQ,QACR1C,UAAU,+CAA8CK,SACzD,gBAGDP,EAAAA,EAAAA,KAAA,SACEF,KAAK,QACL+C,GAAG,WACCnB,EAAOoB,cAAc,SACzB5C,UAAU,uIACV6C,YAAY,oBAEbrB,EAAOsB,QAAQtC,OAASgB,EAAOuB,OAAOvC,QACrCV,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBK,SAAEmB,EAAOuB,OAAOvC,YAKtDL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEP,EAAAA,EAAAA,KAAA,SACE4C,QAAQ,WACR1C,UAAU,+CAA8CK,SACzD,mBAGDP,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACL+C,GAAG,cACCnB,EAAOoB,cAAc,YACzB5C,UAAU,yIAEXwB,EAAOsB,QAAQpC,UAAYc,EAAOuB,OAAOrC,WACxCZ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBK,SAAEmB,EAAOuB,OAAOrC,eAItDZ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCK,UAChDP,EAAAA,EAAAA,KAAA,OAAKE,UAAU,UAASK,UACtBP,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CACHC,GAAG,YACHjD,UAAU,oDAAmDK,SAC9D,yCAOLP,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLI,UAAU,gQAA+PK,SAC1Q,mBAKD,C","sources":["components/StatusMessage.component.jsx","pages/Login.page.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  AiOutlineCheckCircle,\n  AiOutlineCloseCircle,\n  AiOutlineLoading3Quarters,\n} from \"react-icons/ai\";\n\nconst StatusMessage = ({ type, message }) => {\n  let icon;\n  let colorClass;\n\n  switch (type) {\n    case \"error\":\n      icon = <AiOutlineCloseCircle className=\"text-red-500 text-3xl\" />;\n      colorClass = \"bg-red-100 text-red-700\";\n      break;\n    case \"success\":\n      icon = <AiOutlineCheckCircle className=\"text-green-500 text-3xl\" />;\n      colorClass = \"bg-green-100 text-green-700\";\n      break;\n    case \"loading\":\n      icon = (\n        <AiOutlineLoading3Quarters className=\"animate-spin text-blue-500 text-3xl\" />\n      );\n      colorClass = \"bg-blue-100 text-blue-700\";\n      break;\n    default:\n      icon = null;\n  }\n\n  return (\n    <div className={`flex items-center p-4 rounded-lg ${colorClass} space-x-3`}>\n      {icon}\n      <span className=\"text-sm font-medium\">{message}</span>\n    </div>\n  );\n};\n\nexport default StatusMessage;\n","import { useMutation } from \"@tanstack/react-query\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { loginUserApi } from \"../apis/usersApi\";\nimport { useAuth } from \"../AuthContext/AuthContext\";\nimport StatusMessage from \"../components/StatusMessage.component\";\n\n// Validation schema using Yup\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\"),\n});\n\nconst Login = () => {\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  // Mutation\n  const mutation = useMutation({ mutationFn: loginUserApi });\n  // Formik setup for form handling\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      mutation.mutate(values);\n    },\n  });\n  useEffect(() => {\n    let timeOut;\n    if (mutation.isSuccess) {\n      timeOut = setTimeout(() => {\n        login();\n        navigate(\"/dashboard\");\n      }, 1000);\n    }\n    return () => clearTimeout(timeOut);\n  }, [login, mutation, navigate]);\n  return (\n    <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-md p-8 m-4\">\n        <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-8\">\n          Login to Your Account\n        </h2>\n        {mutation.isPending && (\n          <StatusMessage type={\"loading\"} message={\"Loading...\"} />\n        )}\n        {mutation.isError && (\n          <StatusMessage\n            type={\"error\"}\n            message={mutation?.error?.response?.data?.message}\n          />\n        )}\n        {mutation.isSuccess && (\n          <StatusMessage type={\"success\"} message={mutation?.data?.message} />\n        )}\n        {/* Form for login */}\n        <form onSubmit={formik.handleSubmit} className=\"space-y-6\">\n          {/* Email input field */}\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Your Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              {...formik.getFieldProps(\"email\")}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400 focus:outline-none focus:border-indigo-500\"\n              placeholder=\"you@example.com\"\n            />\n            {formik.touched.email && formik.errors.email && (\n              <div className=\"text-red-500 mt-1\">{formik.errors.email}</div>\n            )}\n          </div>\n\n          {/* Password input field */}\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Your Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              {...formik.getFieldProps(\"password\")}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400 focus:outline-none focus:border-indigo-500\"\n            />\n            {formik.touched.password && formik.errors.password && (\n              <div className=\"text-red-500 mt-1\">{formik.errors.password}</div>\n            )}\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm\">\n              <Link\n                to=\"/register\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n              >\n                Don't have an account? Register\n              </Link>\n            </div>\n          </div>\n\n          {/* Submit button */}\n          <button\n            type=\"submit\"\n            className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-purple-500 to-blue-500 hover:from-indigo-600 hover:to-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Sign in\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["_ref","icon","colorClass","type","message","_jsx","AiOutlineCloseCircle","className","AiOutlineCheckCircle","AiOutlineLoading3Quarters","_jsxs","concat","children","validationSchema","Yup","email","required","password","Login","_mutation$error","_mutation$error$respo","_mutation$error$respo2","_mutation$data","login","useAuth","navigate","useNavigate","mutation","useMutation","mutationFn","loginUserApi","formik","useFormik","initialValues","onSubmit","values","mutate","useEffect","timeOut","isSuccess","setTimeout","clearTimeout","isPending","StatusMessage","isError","error","response","data","handleSubmit","htmlFor","id","getFieldProps","placeholder","touched","errors","Link","to"],"sourceRoot":""}