{"version":3,"file":"static/js/887.99ab88ab.chunk.js","mappings":"+KAOA,MA+BA,EA/BsBA,IAAwB,IACxCC,EACAC,GAFiB,KAAEC,EAAI,QAAEC,GAASJ,EAItC,OAAQG,GACN,IAAK,QACHF,GAAOI,EAAAA,EAAAA,KAACC,EAAAA,IAAoB,CAACC,UAAU,0BACvCL,EAAa,0BACb,MACF,IAAK,UACHD,GAAOI,EAAAA,EAAAA,KAACG,EAAAA,IAAoB,CAACD,UAAU,4BACvCL,EAAa,8BACb,MACF,IAAK,UACHD,GACEI,EAAAA,EAAAA,KAACI,EAAAA,IAAyB,CAACF,UAAU,wCAEvCL,EAAa,4BACb,MACF,QACED,EAAO,KAGX,OACES,EAAAA,EAAAA,MAAA,OAAKH,UAAS,oCAAAI,OAAsCT,EAAU,cAAaU,SAAA,CACxEX,GACDI,EAAAA,EAAAA,KAAA,QAAME,UAAU,sBAAqBK,SAAER,MACnC,C,2ICzBV,MAAMS,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,KAAaE,SAAS,wBAChCE,SAAUJ,EAAAA,KAAaE,SAAS,0BAkIlC,EA/HqBG,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EACzB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,GAAY,CAAEC,WAAYC,EAAAA,KAErCC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbjB,MAAO,GACPE,SAAU,GACVC,SAAU,IAEZL,iBAAkBA,EAClBoB,SAAWC,IACTR,EAASS,OAAOD,EAAO,IAY3B,OATAE,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAMJ,OALIX,EAASY,YACXD,EAAUE,YAAW,KACnBf,EAAS,SAAS,GACjB,MAEE,IAAMgB,aAAaH,EAAQ,GACjC,CAACb,EAAUE,KAEZrB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,4DAA2DK,UACxEF,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wDAAuDK,SAAA,EACpEP,EAAAA,EAAAA,KAAA,MAAIE,UAAU,oDAAmDK,SAAC,uBAGlEP,EAAAA,EAAAA,KAAA,KAAGE,UAAU,iCAAgCK,SAAC,8EAI7Cc,EAASe,YACRpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACvC,KAAM,UAAWC,QAAS,eAE1CsB,EAASiB,UACRtC,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CACZvC,KAAM,QACNC,QAAiB,OAARsB,QAAQ,IAARA,GAAe,QAAPN,EAARM,EAAUkB,aAAK,IAAAxB,GAAU,QAAVC,EAAfD,EAAiByB,gBAAQ,IAAAxB,GAAM,QAANC,EAAzBD,EAA2ByB,YAAI,IAAAxB,OAAvB,EAARA,EAAiClB,UAG7CsB,EAASY,YACRjC,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAACvC,KAAM,UAAWC,QAAiB,OAARsB,QAAQ,IAARA,GAAc,QAANH,EAARG,EAAUoB,YAAI,IAAAvB,OAAN,EAARA,EAAgBnB,WAE3DM,EAAAA,EAAAA,MAAA,QAAMuB,SAAUH,EAAOiB,aAAcxC,UAAU,YAAWK,SAAA,EAExDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEP,EAAAA,EAAAA,KAAA,SACE2C,QAAQ,WACRzC,UAAU,+CAA8CK,SACzD,cAGDP,EAAAA,EAAAA,KAAA,SACEF,KAAK,OACL8C,GAAG,cACCnB,EAAOoB,cAAc,YACzB3C,UAAU,uIACV4C,YAAY,aAEbrB,EAAOsB,QAAQlC,UAAYY,EAAOuB,OAAOnC,WACxCb,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBK,SAAEkB,EAAOuB,OAAOnC,eAKtDR,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEP,EAAAA,EAAAA,KAAA,SACE2C,QAAQ,QACRzC,UAAU,+CAA8CK,SACzD,mBAGDP,EAAAA,EAAAA,KAAA,SACEF,KAAK,QACL8C,GAAG,WACCnB,EAAOoB,cAAc,SACzB3C,UAAU,uIACV4C,YAAY,oBAEbrB,EAAOsB,QAAQrC,OAASe,EAAOuB,OAAOtC,QACrCV,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBK,SAAEkB,EAAOuB,OAAOtC,YAKtDL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEP,EAAAA,EAAAA,KAAA,SACE2C,QAAQ,WACRzC,UAAU,+CAA8CK,SACzD,cAGDP,EAAAA,EAAAA,KAAA,SACEF,KAAK,WACL8C,GAAG,cACCnB,EAAOoB,cAAc,YACzB3C,UAAU,yIAEXuB,EAAOsB,QAAQnC,UAAYa,EAAOuB,OAAOpC,WACxCZ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oBAAmBK,SAAEkB,EAAOuB,OAAOpC,eAItDZ,EAAAA,EAAAA,KAAA,UACEF,KAAK,SACLI,UAAU,gQAA+PK,SAC1Q,iBAIHP,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcK,UAC3BP,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CACHC,GAAG,SACHhD,UAAU,oDAAmDK,SAC9D,yCAKD,C","sources":["components/StatusMessage.component.jsx","pages/Register.page.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  AiOutlineCheckCircle,\n  AiOutlineCloseCircle,\n  AiOutlineLoading3Quarters,\n} from \"react-icons/ai\";\n\nconst StatusMessage = ({ type, message }) => {\n  let icon;\n  let colorClass;\n\n  switch (type) {\n    case \"error\":\n      icon = <AiOutlineCloseCircle className=\"text-red-500 text-3xl\" />;\n      colorClass = \"bg-red-100 text-red-700\";\n      break;\n    case \"success\":\n      icon = <AiOutlineCheckCircle className=\"text-green-500 text-3xl\" />;\n      colorClass = \"bg-green-100 text-green-700\";\n      break;\n    case \"loading\":\n      icon = (\n        <AiOutlineLoading3Quarters className=\"animate-spin text-blue-500 text-3xl\" />\n      );\n      colorClass = \"bg-blue-100 text-blue-700\";\n      break;\n    default:\n      icon = null;\n  }\n\n  return (\n    <div className={`flex items-center p-4 rounded-lg ${colorClass} space-x-3`}>\n      {icon}\n      <span className=\"text-sm font-medium\">{message}</span>\n    </div>\n  );\n};\n\nexport default StatusMessage;\n","import { useMutation } from \"@tanstack/react-query\";\nimport { useFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { registerUserApi } from \"../apis/usersApi\";\nimport StatusMessage from \"../components/StatusMessage.component\";\n\n// Validation schema\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\"),\n  username: Yup.string().required(\"Username is required\"),\n});\n\nconst Registration = () => {\n  const navigate = useNavigate();\n  // Mutation\n  const mutation = useMutation({ mutationFn: registerUserApi });\n  // Formik setup for form handling\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      mutation.mutate(values);\n    },\n  });\n  useEffect(() => {\n    let timeOut;\n    if (mutation.isSuccess) {\n      timeOut = setTimeout(() => {\n        navigate(\"/login\");\n      }, 1000);\n    }\n    return () => clearTimeout(timeOut);\n  }, [navigate, mutation]);\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-md p-8 m-4\">\n        <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-8\">\n          Create an Account\n        </h2>\n        <p className=\"text-center text-gray-600 mb-4\">\n          Create an account to get free access for 3 days. No credit card\n          required.\n        </p>\n        {mutation.isPending && (\n          <StatusMessage type={\"loading\"} message={\"Loading...\"} />\n        )}\n        {mutation.isError && (\n          <StatusMessage\n            type={\"error\"}\n            message={mutation?.error?.response?.data?.message}\n          />\n        )}\n        {mutation.isSuccess && (\n          <StatusMessage type={\"success\"} message={mutation?.data?.message} />\n        )}\n        <form onSubmit={formik.handleSubmit} className=\"space-y-6\">\n          {/* Username input field */}\n          <div>\n            <label\n              htmlFor=\"username\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Username\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              {...formik.getFieldProps(\"username\")}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400 focus:outline-none focus:border-indigo-500\"\n              placeholder=\"John Doe\"\n            />\n            {formik.touched.username && formik.errors.username && (\n              <div className=\"text-red-500 mt-1\">{formik.errors.username}</div>\n            )}\n          </div>\n\n          {/* Email input field */}\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Email Address\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              {...formik.getFieldProps(\"email\")}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400 focus:outline-none focus:border-indigo-500\"\n              placeholder=\"you@example.com\"\n            />\n            {formik.touched.email && formik.errors.email && (\n              <div className=\"text-red-500 mt-1\">{formik.errors.email}</div>\n            )}\n          </div>\n\n          {/* Password input field */}\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"text-sm font-medium text-gray-700 block mb-2\"\n            >\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              {...formik.getFieldProps(\"password\")}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400 focus:outline-none focus:border-indigo-500\"\n            />\n            {formik.touched.password && formik.errors.password && (\n              <div className=\"text-red-500 mt-1\">{formik.errors.password}</div>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gradient-to-r from-purple-500 to-blue-500 hover:from-indigo-600 hover:to-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Register\n          </button>\n        </form>\n        <div className=\"text-sm mt-2\">\n          <Link\n            to=\"/login\"\n            className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n          >\n            Already have an account? Login\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Registration;\n"],"names":["_ref","icon","colorClass","type","message","_jsx","AiOutlineCloseCircle","className","AiOutlineCheckCircle","AiOutlineLoading3Quarters","_jsxs","concat","children","validationSchema","Yup","email","required","password","username","Registration","_mutation$error","_mutation$error$respo","_mutation$error$respo2","_mutation$data","navigate","useNavigate","mutation","useMutation","mutationFn","registerUserApi","formik","useFormik","initialValues","onSubmit","values","mutate","useEffect","timeOut","isSuccess","setTimeout","clearTimeout","isPending","StatusMessage","isError","error","response","data","handleSubmit","htmlFor","id","getFieldProps","placeholder","touched","errors","Link","to"],"sourceRoot":""}